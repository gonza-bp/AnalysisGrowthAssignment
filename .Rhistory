x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mu=c(0.3,0.0025,1.077,0.1477)
sum(w*(x-mu[4])^2)
mu[0]
mu[4]
mu[1]
mu=c(0.3,0.0025,1.077,0.1477)
sum(w*(x-mu[1])^2)
mu=c(0.3,0.0025,1.077,0.1477)
sum(w*(x-mu[2])^2)
mu=c(0.3,0.0025,1.077,0.1477)
sum(w*(x-mu[3])^2)
mu=c(0.3,0.0025,1.077,0.1477)
sum(w*(x-mu[4])^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
data(mtcars)
lm(mpg~weight,data=mtcars)
data
mtcars
data(mtcars)
lm(mpg~wt,data=mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x_norm=(x-mean(x))/std(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x_norm=(x-mean(x))/sd(x)
x_norm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
summary(fit)
library(mtcars)
library(dataset)
mtcars
fit<-lm(mpg~wt,data=mtcars)
fit<-lm(mpg~wt,data=mtcars)
summary(fit)
summary(fit)$df
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef
mean(mtcars$weight)
mean(mtcars$wgt)
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
??mtcars
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
newdata <- data.frame(wt = 3000)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
p1
p2
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
newdata <- data.frame(wt = 3)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
p1
p2
?? predict
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
newdata <- data.frame(wt = 3)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
fit<-lm(mpg~I(wt/2),data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
p2 <- predict(fit, newdata, interval = ("prediction"))
sumCoef
fit<-lm(mpg~I(wt/2),data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
newdata <- data.frame(wt = 3)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
summary(fit)
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
n <- length(y)
beta1 <- cor(y, x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
yhat <- beta0 + beta1 * x
e <- y - yhat        # residuals
sigma <- sqrt(sum(e^2) / (n - 2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
pBeta0
pBeta1
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
n <- length(y)
beta1 <- cor(y, x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
yhat <- beta0 + beta1 * x
e <- y - yhat        # residuals
sigma <- sqrt(sum(e^2) / (n - 2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
pBeta1
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
rm(list=ls()) # clean environment
fit <- lm(mpg ~ wt, data = mtcars)
predict(fit, data.frame(wt = 3), interval="prediction")
rm(list=ls()) # clean environment
y <- mtcars$mpg; x <- mtcars$wt
fitWithIntercept <- lm(y ~ x)
yhat1 <- fit$coefficients[1] + x
se1 <- sum((y - yhat1)^2)
yhat2 <- fit$coefficients[1] + fit$coefficients[2] * x
se2 <- sum((y - yhat2)^2)
ratio <- se2 / se1
rm(list=ls()) # clean environment
y <- mtcars$mpg; x <- mtcars$wt
fitWithIntercept <- lm(y ~ x)
yhat1 <- fit$coefficients[1] + x
se1 <- sum((y - yhat1)^2)
yhat2 <- fit$coefficients[1] + fit$coefficients[2] * x
se2 <- sum((y - yhat2)^2)
ratio <- se2 / se1
y <- mtcars$mpg; x <- mtcars$wt
fitWithIntercept <- lm(y ~ x)
yhat1 <- fit$coefficients[1] + x
se1 <- sum((y - yhat1)^2)
fit <- lm(y ~ x)
y <- mtcars$mpg; x <- mtcars$wt
fitWithIntercept <- lm(y ~ x)
yhat1 <- fit$coefficients[1] + x
se1 <- sum((y - yhat1)^2)
yhat2 <- fit$coefficients[1] + fit$coefficients[2] * x
se2 <- sum((y - yhat2)^2)
ratio <- se2 / se1
ratio
1/0.018
??mtcars
mtcars
fit<-lm(mpg~factor(cyl)+wt,data=mtcars)
fit
fit<-lm(mpg~factor(cyl)+wt,data=mtcars)
summary(fit)
fit<-lm(mpg~as.factor(cyl)+wt,data=mtcars)
summary(fit)
fit<-lm(mpg~I(as.factor(cyl))+wt,data=mtcars)
summary(fit)
fit<-lm(mpg~factor(cyl)+wt-1,data=mtcars)
summary(fit)
fit<-lm(mpg~factor(cyl)+wt-1,data=mtcars)
summary(fit)
fit<-lm(mpg~factor(cyl)-1,data=mtcars)
summary(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
hatvalues(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
hatvalues(fit)
dfbetas(fit)
lm(user~wind,data=shuttle)
library(MASS)
lm(user~wind,data=shuttle)
shuttle
shuttle$output=shuttle$use=="auto"
shuttle
factor(shuttle$use)
level(factor(shuttle$use))
levels(factor(shuttle$use))
factor(shuttle$use)
asnumeric(factor(shuttle$use))
as.numeric(factor(shuttle$use))
as.numeric(factor(shuttle$use,"auto"=1,"noauto"=0))
??factor
as.numeric(factor(shuttle$use,"auto","noauto"))
as.numeric(factor(shuttle$use,"noauto","auto"))
as.numeric(factor(shuttle$use,c("noauto","auto")))
as.numeric(factor(shuttle$use,c("noauto","auto")))-1
shuttle$use
as.numeric(factor(shuttle$use,c("noauto","auto")))-1
shuttle$output=as.numeric(factor(shuttle$use,c("noauto","auto")))-1
lm(output~wind,data=shuttle)
fitwind<-glm(output~wind,data=shuttle,family= "binomial")
fithead<-glm(output~head,data=shuttle,family="binomial")
shuttle
shuttle$output=as.numeric(factor(shuttle$use,c("noauto","auto")))-1
fitwind<-glm(output~factor(head)+wind-1,data=shuttle,family= "binomial")
fit<-glm(output~factor(head)+wind-1,data=shuttle,family= "binomial")
shuttle$head
shuttle
fit<-glm(output~wind+sign-1,data=shuttle,family= "binomial")
shuttle$output=as.numeric(factor(shuttle$use,c("noauto","auto")))-1
summary(fit)
summary(fit)$coeff
fit<-glm(output~wind+sign-1,data=shuttle,family= "binomial")
exp(summary(fit)$coeff[0])/exp(summary(fit)$coeff[1])
summary(fit)$coeff
summary(fit)$coeff[0]
summary(fit)$coeff(0)
summary(fit)$coeff
summary(fit)$coeff$windhead
summary(fit)$coeff[1]
summary(fit)$coeff[2]
exp(summary(fit)$coeff[1])/exp(summary(fit)$coeff[2])
fit<-glm(output~wind+magn-1,data=shuttle,family= "binomial")
summary(fit)
exp(summary(fit)$coeff[1])/exp(summary(fit)$coeff[2])
fit<-glm(output~wind+factor(magn)-1,data=shuttle,family= "binomial")
summary(fit)
exp(summary(fit)$coeff[1])/exp(summary(fit)$coeff[2])
fit<-glm(output~wind-1,data=shuttle,family= "binomial")
summary(fit)
exp(summary(fit)$coeff[1])/exp(summary(fit)$coeff[2])
library(MASS)
shuttle$output=as.numeric(factor(shuttle$use,c("noauto","auto")))-1
fit<-glm(output~wind-1,data=shuttle,family= "binomial")
summary(fit)
exp(summary(fit)$coeff[1])/exp(summary(fit)$coeff[2])
#0.969
fit<-glm(output~wind+factor(magn)-1,data=shuttle,family= "binomial")
summary(fit)
exp(summary(fit)$coeff[1])/exp(summary(fit)$coeff[2])
fitreverse<-glm(1-output~wind-1,data=shuttle,family= "binomial")
summary(fitreverse)
fit<-glm(output~wind-1,data=shuttle,family= "binomial")
summary(fit)
InsectSprays
fit<-glm(count~factor(spray),data=InsectSprays,family="poisson")
summary(fit)
exp(summary(fit)$coeff)
fit<-glm(count~factor(spray)-1,data=InsectSprays,family="poisson")
summary(fit)
exp(summary(fit)$coeff)
14.5/15.33
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
x
y
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
knots <- seq(0, 8 * pi, length = 20);
knots
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
splineTerms
X>0
xZ0
x>0
(x>0)*x
x
knotpointterm=spline(x>0)*x
knotpointterm=(x>0)*x
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knotpointterm=(x>0)*x
fit<-lm(y~x+knotpointterm)
fit
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots<-c(0)
splineTerms<-sapply(knots, function(knot)(x > knot)*(x - knot))
xMat<-cbind(1,x,splineTerms)
linearModel <- lm(y~xMat-1)
linearModel
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots<-c(0)
splineTerms<-sapply(knots, function(knot)(x > knot)*(x - knot))
xMat<-cbind(1,x,splineTerms)
linearModel <- lm(y~xMat-1)
yhat<-predict(linearModel)
plot(x,y,frame=FALSE,pch=21,bg="lightblue",cex=2)
lines(x,yhat,col="red",lwd=2)
mtcars
??mtcars
knitr::opts_chunk$set(echo = TRUE)
fit<-lm(mpg~am,data=mtcars)
summary(fit)
plot(mpg~am)
plot(am,mpg)
plot(am,mpg)
plot(am,mpg,data=mtcars)
plot(am~mpg,data=mtcars)
plot(factor(am)~mpg,data=mtcars)
fit<-lm(mpg~factor(am)-1,data=mtcars)
summary(fit)
plot(factor(am)~mpg,data=mtcars)
fit<-lm(mpg~factor(am),data=mtcars)
summary(fit)
plot(factor(am)~mpg,data=mtcars)
fit<-lm(mpg~factor(am)-1,data=mtcars)
summary(fit)
fit<-lm(mpg~.,data=mtcars)
summary(fit)
corr(mtcars)
cor(mtcars)
cor(mtcars)[1,:]
cor(mtcars)[1]
cor(mtcars)[1][:]
cor(mtcars)[1,]
summary(mtcars)
data(mtcars)
names(mtcars)
data(mtcars)
str(mtcars)
mtcars$am
data(mtcars)
mtcars$am<-relevel(as.factor(mtcars$am),ref='0',labels=c('Auto','Manual'))
str(mtcars)
mtcars$am
??factor
??as.factor
mtcars$am<-relevel(as.factor(mtcars$am),levels=c(0,1),labels=c('Auto','Manual'))
mtcars$am<-relevel(as.factor(mtcars$am),ref=0,levels=c(0,1),labels=c('Auto','Manual'))
mtcars$am<-as.factor(mtcars$am,ref=0,levels=c(0,1),labels=c('Auto','Manual')
mtcars
mtcars$am
mtcars$am=="Auto"
mtcars$am=="Manual"
mtcars$am==0
data(mtcars)
mtcars$am<-relevel(as.factor(mtcars$am), ref='0',labels=c('Automatic','Manual'))
str(mtcars)
data(mtcars)
data$am<-factor(data$am)
data(mtcars)
mtcars$am<-factor(data$am)
data(mtcars)
mtcars$am<-relevel(factor(data$am),c("automatic", "manual"))
data(mtcars)
mtcars$am<-relevel(factor(mtcars$am),c("automatic", "manual"))
mtcars$am<-relevel(factor(mtcars$am),c("automatic", "manual"),ref="0")
mtcars
mtcars$am
mtcars$am=="automatic"
data(mtcars)
mtcars$am<-factor(mtcars$am),labels=c("automatic", "manual"),ref=0)
mtcars$am<-factor(mtcars$am,labels=c("automatic", "manual"),ref=0)
mtcars$am<-factor(mtcars$am,labels=c("automatic", "manual"))
mtcars$am
data(mtcars)
mtcars$am
data(mtcars)
mtcars$am<-factor(mtcars$am,labels=c("manual","automatic"))
mtcars$am
t.test(mtcars$mpg[mtcars$am=="manual"],mtcars$mpg[mtcars$am=="automatic"])
t.test(mtcars$mpg[mtcars$am=="manual"],mtcars$mpg[mtcars$am=="automatic"])
fit<-lm(mpg~.,data=mtcars)
summary(fit)
??boxplot
boxplot(mpg~am,data=mtcars)
fit<-lm(mpg~am,data=mtcars)
summary(fit)
fit$residuals
plot(fit$residuals)
fit<-lm(mpg~.,data=mtcars)
summary(fit)
plot(fit$residuals)
fit<-lm(mpg~am-1,data=mtcars)
summary(fit)
fit$residuals
plot(fit$residuals)
fit1<-lm(mpg~am-1,data=mtcars)
fit2<-lm(mpg~am+wt-1,data=mtcars)
summary(fit1)
summary(fit2)
fit2$residuals
plot(fit2$residuals)
plot(predict(fit1),resid(fit1))
plot(predict(fit2),resid(fit2))
plot(predict(fit1),resid(fit1))
plot(predict(fit1),resid(fit1))
predict(fit1)
plot(predict(fit1))
predict(fit1)
plot(predict(fit1),resid(fit1))
plot(resid(fit1))
hatvalues(fit1)
fit1<-lm(mpg~am,data=mtcars)
summary(fit1)
boxplot(mpg~am,data=mtcars)
pairs(mpg ~ ., data = mtcars)
par(mfrow=c(2,2))
plot(fit)
mtcars
knitr::opts_chunk$set(echo = TRUE)
data(mtcars)
mtcars$am<-factor(mtcars$am,labels=c("manual","automatic"))
mtcars$cyl<-factor(mtcars$cyl)
mtcars$vs<-factor(mtcars$vs)
mtcars$gear<-factor(mtcars$gear)
mtcars$carb<-factor(mtcars$carb)
boxplot(mpg~am,data=mtcars)
boxplot(mpg~am,data=mtcars)
pairs(mpg ~ ., data = mtcars)
par(mfrow=c(2,2))
plot(fit_am_wt)
knitr::opts_chunk$set(echo = TRUE)
data(mtcars)
mtcars$am<-factor(mtcars$am,labels=c("manual","automatic"))
mtcars$cyl<-factor(mtcars$cyl)
mtcars$vs<-factor(mtcars$vs)
mtcars$gear<-factor(mtcars$gear)
mtcars$carb<-factor(mtcars$carb)
str(mtcars)
t.test(mtcars$mpg[mtcars$am=="manual"],mtcars$mpg[mtcars$am=="automatic"])
fit_am<-lm(mpg~am,data=mtcars)
summary(fit_am)
fit_all<-lm(mpg~.,data=mtcars)
summary(fit_all)
fit_am<-lm(mpg~am,data=mtcars)
summary(fit_am)
fit_am_wt<-lm(mpg~am+wt+cyl,data=mtcars)
summary(fit_am_wt)
boxplot(mpg~am,data=mtcars)
pairs(mpg ~ ., data = mtcars)
par(mfrow=c(2,2))
plot(fit_am_wt)
??mtcars
install.packages(shiny)
install.packages("shiny")
install.packages("leaflet")
knitr::opts_chunk$set(echo = TRUE)
mymap<- leaflet () %>%
addTiles() %>%
addRectangles(lng1 =42, lat1=8, lng2 =38, lat2=0)
mymap<- leaflet () %>%
addTiles() %>%
addRectangles(lng2 =8, lat2=42, lng1 =0, lat1=32)
install.packages("plotly")
knitr::opts_chunk$set(echo = FALSE)
library(plotly)
plot_ly(mpg~weight,data=mtcars)
plot_ly(mpg~wt,data=mtcars)
plot_ly(x=wt,y=mpg,data=mtcars)
plot_ly(x=~wt,y=~mpg,data=mtcars)
plot_ly(x=~wt,y=~mpg,color=cyl,data=mtcars)
mtcars$cyl
mtcars$gear
mtcars
mtcars$disp
??mtcars
plot_ly(x=~hp,y=~mpg,size=~wt,color=~am,data=mtcars)
knitr::opts_chunk$set(echo = FALSE)
library(plotly)
plot_ly(x=~hp,y=~mpg,size=~wt,color=~am,data=mtcars)
unlink('Trabajo/CursosOnline/DataScience/09_DevelopingDataProducts/AssignmentWeek3/AssignmentUsingPlotly_cache', recursive = TRUE)
??plot_ly
??data
?data
plot_ly(rock,x=~peri,y=~area,size=~shape,color=~perm,type="scatter",mode="lines")
plot_ly(rock,x=~peri,y=~area,size=~shape,color=~perm,type="scatter",mode="circles")
plot_ly(rock,x=~peri,y=~area,size=~shape,color=~perm,type="scatter",mode="markers")
install.packages("shiny")
shiny::runApp('Trabajo/CursosOnline/DataScience/09_DevelopingDataProducts/CourseAssignment/DataProductApp')
ToothGrowth
??ToothGrowth
runApp('Trabajo/CursosOnline/DataScience/09_DevelopingDataProducts/CourseAssignment/DataProductApp')
runApp('Trabajo/CursosOnline/DataScience/09_DevelopingDataProducts/CourseAssignment/DataProductApp')
runApp('Trabajo/CursosOnline/DataScience/09_DevelopingDataProducts/CourseAssignment/DataProductApp')
